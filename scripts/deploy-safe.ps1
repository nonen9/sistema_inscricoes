# Deploy Seguro para Produ√ß√£o - Windows PowerShell
# Este script garante que dados n√£o sejam perdidos durante o deploy

param(
    [switch]$Force = $false
)

Write-Host "üöÄ Iniciando deploy seguro para produ√ß√£o..." -ForegroundColor Green

# Verificar se estamos em produ√ß√£o
$env:NODE_ENV = if ($env:NODE_ENV) { $env:NODE_ENV } else { "development" }

if ($env:NODE_ENV -ne "production" -and -not $Force) {
    Write-Host "‚ùå Este script deve ser executado apenas em produ√ß√£o (NODE_ENV=production)" -ForegroundColor Red
    Write-Host "   Use -Force para ignorar esta verifica√ß√£o em desenvolvimento" -ForegroundColor Yellow
    exit 1
}

# Definir caminhos
$dataDir = if ($env:DATA_PATH) { $env:DATA_PATH } else { ".\data" }
$configDir = if ($env:CONFIG_PATH) { $env:CONFIG_PATH } else { ".\config" }
$timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
$backupDir = ".\backup-$timestamp"

Write-Host "üìÅ Criando backup pr√©-deploy..." -ForegroundColor Yellow

# Criar diret√≥rio de backup
New-Item -ItemType Directory -Force -Path $backupDir | Out-Null

# Fazer backup dos dados cr√≠ticos
if (Test-Path $dataDir) {
    Write-Host "üíæ Fazendo backup de dados..." -ForegroundColor Cyan
    Copy-Item -Path $dataDir -Destination "$backupDir\data" -Recurse -Force
}

if (Test-Path $configDir) {
    Write-Host "üíæ Fazendo backup de configura√ß√µes..." -ForegroundColor Cyan
    Copy-Item -Path $configDir -Destination "$backupDir\config" -Recurse -Force
}

# Criar arquivo de informa√ß√µes do backup
$backupInfo = @{
    timestamp = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")
    type = "pre-deploy-backup"
    environment = $env:NODE_ENV
    warning = "N√ÉO EXCLUIR - Backup autom√°tico pr√©-deploy"
} | ConvertTo-Json -Depth 2

$backupInfo | Out-File -FilePath "$backupDir\backup-info.json" -Encoding UTF8

Write-Host "‚úÖ Backup pr√©-deploy criado em: $backupDir" -ForegroundColor Green

# Verificar se os diret√≥rios de dados existem
Write-Host "üîç Verificando estrutura de dados..." -ForegroundColor Yellow

New-Item -ItemType Directory -Force -Path $dataDir | Out-Null
New-Item -ItemType Directory -Force -Path $configDir | Out-Null

# Inicializar arquivos vazios se n√£o existirem
$filesToCreate = @{
    "$dataDir\tournaments.json" = "[]"
    "$dataDir\registrations.json" = "[]"
    "$dataDir\players.json" = "[]"
    "$dataDir\payment-status.json" = "{}"
}

foreach ($file in $filesToCreate.Keys) {
    if (-not (Test-Path $file)) {
        $filesToCreate[$file] | Out-File -FilePath $file -Encoding UTF8
        Write-Host "üìù Arquivo $(Split-Path $file -Leaf) criado" -ForegroundColor Cyan
    }
}

# Verificar configura√ß√£o de usu√°rios
if (-not (Test-Path "$configDir\users.json")) {
    Write-Host "‚ö†Ô∏è  Arquivo users.json n√£o existe. Ser√° criado na primeira execu√ß√£o." -ForegroundColor Yellow
}

Write-Host "üîí Estrutura de arquivos verificada" -ForegroundColor Green

# Limpar backups antigos (manter √∫ltimos 10)
Write-Host "üßπ Limpando backups antigos..." -ForegroundColor Yellow

$backupFolders = Get-ChildItem -Path "." -Directory -Name "backup-*" | Sort-Object Name
if ($backupFolders.Count -gt 10) {
    $toRemove = $backupFolders[0..($backupFolders.Count - 11)]
    foreach ($folder in $toRemove) {
        Remove-Item -Path ".\$folder" -Recurse -Force -ErrorAction SilentlyContinue
    }
    Write-Host "   Removidos $($toRemove.Count) backups antigos" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "‚úÖ Deploy seguro conclu√≠do!" -ForegroundColor Green
Write-Host "üìä Estrutura preparada para inicializa√ß√£o da aplica√ß√£o" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìã Resumo:" -ForegroundColor White
Write-Host "   ‚Ä¢ Backup criado em: $backupDir" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Dados preservados: $(if (Test-Path $dataDir) { '‚úÖ' } else { '‚ùå' })" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Configura√ß√µes preservadas: $(if (Test-Path $configDir) { '‚úÖ' } else { '‚ùå' })" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Estrutura verificada: ‚úÖ" -ForegroundColor Cyan
Write-Host ""
Write-Host "üöÄ A aplica√ß√£o pode ser iniciada com seguran√ßa!" -ForegroundColor Green
